{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Teo",
  "scopeName": "source.teo",
  "fileTypes": [
    "teo"
  ],
  "patterns": [
    {
      "include": "#docComment"
    },
    {
      "include": "#codeComment"
    },
    {
      "include": "#importStatement"
    },
    {
      "include": "#namespaceStatement"
    }
  ],
  "repository": {
    "docComment": {
      "name": "comment.teo.doc",
      "begin": "///(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))",
      "end": "$\\n?"
    },
    "codeComment": {
      "name": "comment.teo.normal",
      "begin": "//",
      "end": "$\\n?"
    },
    "comma": {
      "name": "punctuation.separator.comma.teo",
      "match": ","
    },
    "colon": {
      "name": "punctuation.terminator.statement.teo",
      "match": ":"
    },
    "semicolon": {
      "name": "punctuation.terminator.statement.teo",
      "match": ";"
    },
    "accessor": {
      "name": "punctuation.terminator.accessor.teo",
      "match": "(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))",
      "captures": {
        "1": {
          "name": "punctuation.accessor.teo"
        },
        "2": {
          "name": "punctuation.accessor.optional.teo"
        }
      }
    },
    "parenOpen": {
      "name": "punctuation.definition.tag.teo",
      "match": "\\("
    },
    "parenClose": {
      "name": "punctuation.definition.tag.teo",
      "match": "\\)"
    },
    "arrow": {
      "name": "punctuation.definition.arrow.teo",
      "match": "->"
    },
    "nullLiteral": {
      "name": "constant.language.null.teo",
      "match": "\\b(null)\\b"
    },
    "boolLiteral": {
      "name": "constant.language.boolean.teo",
      "match": "\\b(true|false)\\b"
    },
    "numberLiteral": {
      "name": "constant.numeric.teo",
      "match": "((0(x|X)[0-9a-fA-F]*)|(\\+|-)?\\\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)([LlFfUuDdg]|UL|ul)?\\b"
    },
    "stringLiteral": {
      "name": "string.quoted.double.teo",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.teo",
          "match": "\\\\."
        }
      ]
    },
    "regexLiteral": {
      "name": "string.regexp.teo",
      "begin": "/(?!/)",
      "end": "/",
      "patterns": [
        {
          "name": "constant.character.escape.teo",
          "match": "\\\\."
        }
      ]
    },
    "enumVariantLiteral": {
      "name": "variable.other.enummember.teo",
      "match": "\\.[^\\d\\W]\\w*"
    },
    "primitiveLiteral": {
      "name": "source.teo.literal",
      "patterns": [
        {
          "include": "#nullLiteral"
        },
        {
          "include": "#boolLiteral"
        },
        {
          "include": "#numberLiteral"
        },
        {
          "include": "#regexLiteral"
        },
        {
          "include": "#enumVariantLiteral"
        }
      ]
    },
    "dictionaryLiteral": {
      "name": "source.teo.dictionary",
      "begin": "\\{",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.teo"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.teo"
        }
      },
      "patterns": [
        {
          "include": "#docComment"
        },
        {
          "include": "#codeComment"
        },
        {
          "include": "#expression"
        },
        {
          "include": "#colon"
        }
      ]
    },
    "arrayLiteral": {
      "name": "source.teo.array",
      "begin": "\\[",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.teo"
        }
      },
      "end": "\\]",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.teo"
        }
      },
      "patterns": [
        {
          "include": "#expression"
        },
        {
          "include": "#docComment"
        },
        {
          "include": "#codeComment"
        }
      ]
    },
    "tupleLiteral": {
      "name": "source.teo.tuple\"",
      "begin": "\\(",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.teo"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.teo"
        }
      },
      "patterns": [
        {
          "include": "#expression"
        },
        {
          "include": "#docComment"
        },
        {
          "include": "#codeComment"
        }
      ]
    },
    "pipelineLiteral": {
      "name": "source.teo.pipeline",
      "patterns": [
        {
          "include": "#pipelineChainedFunctionCall"
        },
        {
          "include": "#pipelineChainedIdentifier"
        }
      ]
    },
    "pipelineChainedIdentifier": {
      "name": "source.teo.pipelineChainedIdentifier",
      "patterns": [
        {
          "match": "(\\$)?(\\w+)(\\.)?",
          "captures": {
            "1": {
              "name": "entity.name.function.attribute.teo"
            },
            "2": {
              "name": "entity.name.function.attribute.teo"
            },
            "3": {
              "name": "punctuation.definition.tag.teo"
            }
          }
        }
      ]
    },
    "pipelineChainedFunctionCall": {
      "name": "source.teo.pipelineChainedFunctionCall",
      "begin": "(\\$)?(\\w+)(\\()",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.attribute.teo"
        },
        "2": {
          "name": "entity.name.function.attribute.teo"
        },
        "3": {
          "name": "punctuation.definition.tag.teo"
        }
      },
      "end": "(\\))(\\.)?",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.teo"
        },
        "2": {
          "name": "punctuation.definition.tag.teo"
        }
      },
      "patterns": [
        {
          "include": "#namedArgument"
        },
        {
          "include": "#expression"
        },
        {
          "include": "#comma"
        }
      ]
    },
    "expression": {
      "name": "source.teo.value",
      "patterns": [
        {
          "include": "#dictionaryLiteral"
        },
        {
          "include": "#arrayLiteral"
        },
        {
          "include": "#tupleLiteral"
        },
        {
          "include": "#primitiveLiteral"
        },
        {
          "inlcude": "#pipelineLiteral"
        },
        {
          "include": "#enumVariantLiteral"
        }
      ]
    },
    "importStatement": {
      "name": "storage.modifier.import.teo",
      "patterns": [
        {
          "match": "(import)\\s+",
          "captures": {
            "1": {
              "name": "keyword.control.teo"
            }
          }
        },
        {
          "include": "#stringLiteral"
        }
      ]
    },
    "namespaceStatement": {
      "name": "source.teo.embedded.namespace",
      "begin": "^\\s*(namespace)\\s+([A-Za-z][\\w]*)\\s+({)",
      "beginCaptures": {
        "1": {
          "name": "storage.type.config.teo"
        },
        "2": {
          "name": "entity.name.type.config.teo"
        },
        "3": {
          "name": "punctuation.definition.tag.teo"
        }
      },
      "end": "\\s*\\}",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.teo"
        }
      },
      "patterns": [
        {
          "include": "#docComment"
        },
        {
          "include": "#codeComment"
        },
        {
          "include": "#namespaceStatement"
        }
      ]
    },
    "constantStatement": {
      "name": "variable.name.teo",
      "begin": "(let)\\s+([_\\w]+)\\s+(=)\\s+",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.teo"
        },
        "2": {
          "name": "variable.name.teo"
        },
        "3": {
          "name": "punctuation.definition.tag.teo"
        }
      },
      "patterns": {
        "include": "#expression"
      }
    }
  }
}